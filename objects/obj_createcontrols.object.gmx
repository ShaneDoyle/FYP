<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create virutal keys
if(os_type == os_android || global.controldebug == true)
{
    height = 360
    width = 640
    key_right = virtual_key_add(width - (width * 0.85),    height - height*0.175,    width * 0.15,     height *0.175,     vk_right);
    key_left = virtual_key_add(width - (width * 1),    height - height*0.175,    width * 0.15,     height *0.175,      vk_left);
    key_jump = virtual_key_add(width - (width * 0.25),     height - height*0.175,    width * 0.10,     height *0.175,     vk_space);
   // key_space = virtual_key_add(width - (width * 0.25),     height - height*0.175,    width * 0.10,     height *0.175,     ord(");
    key_attack = virtual_key_add(width - (width * 0.15),     height - height*0.175,    width * 0.10,     height *0.175,     ord('F'));
    key_ability = virtual_key_add(width - (width * 0.15),     height - height*0.350,    width * 0.10,     height *0.175,     ord('G'));
    key_interact = virtual_key_add(width - (width * 0.35),     height - height*0.175,    width * 0.10,     height *0.175,     ord('Y'));
}
//virtual_key_show(key_right);
//virtual_key_show(key_left);
//virtual_key_show(key_up);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arrows
if(os_type == os_android || global.controldebug = true)
{
    draw_sprite(spr_leftarrow,0,width - (width * 0.92),  height - height*0.15  );
    draw_sprite(spr_rightarrow,0,width - (width * 0.83),  height - height*0.15  );
    draw_sprite(spr_button1,0,width - (width * 0.25),  height - height*0.175  );
    draw_sprite(spr_button2,0,width - (width * 0.15),  height - height*0.175  );
    draw_sprite(spr_button3,0,width - (width * 0.35),  height - height*0.175  );
    draw_sprite(spr_button4,0,width - (width * 0.15),  height - height*0.350  );
}






//if(os_type != os_windows)
//{
/*
if(height &lt; 721)
{
draw_sprite(spr_leftarrow,0,width - (width * 0.92),  height - height*0.15  );
draw_sprite(spr_rightarrow,0,width - (width * 0.83),  height - height*0.15  );
draw_sprite(spr_button1,0,width - (width * 0.25),  height - height*0.175  );
draw_sprite(spr_button2,0,width - (width * 0.15),  height - height*0.175  );
}

if (height &gt; 721)
{
draw_sprite(spr_leftarrowlarge,0,width - (width * 0.92),  height - height*0.15  );
draw_sprite(spr_rightarrowlarge,0,width - (width * 0.83),  height - height*0.15 );
draw_sprite(spr_button1_large,0,width - (width * 0.25),  height - height*0.175  );
draw_sprite(spr_button2_large,0,width - (width * 0.15),  height - height*0.175  );
}*/
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
