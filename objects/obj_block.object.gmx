<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
image_speed = 0;
filldirt = true;
depth = 3;

if(room == rm_server)
{
    alarm[0] = 10;
}

//Misc
planetnumber = global.planetnumber;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send to server
if(rm_server)
{
    //alarm[11] = 120;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create dirt block
if(!place_meeting(x,y+32,obj_block))
{
    //alarm[10] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send to server?
if(rm_server)
{
    buffer_seek(global.buffer, buffer_seek_start, 0);
    buffer_write(global.buffer, buffer_u8, 12);
    buffer_write(global.buffer, buffer_s32, x);
    buffer_write(global.buffer, buffer_s32, y);
    buffer_write(global.buffer, buffer_u8, image_index);
    network_send_packet(obj_server_controller.socket, global.buffer, scr_getBufferSize());
}
else
{
    image_index = starting_image;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y+32,obj_block)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fill dirt blocks

if(place_meeting(x-16, y, obj_block))
{
}
else
{
    var block = instance_create(x-32,y,obj_block);
    block.image_index = 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Corners and walling

//Remove alone corners
if(image_index == 2 || image_index == 3)
{
    //Check if block touching to the left and right
    if(!place_meeting(x+32,y,obj_block) &amp;&amp; !place_meeting(x-32,y,obj_block))
    {
        instance_destroy();
    }
}

//Make undercorner into corner
if(image_index == 4)
{
    //For undercorners that have no top (previous deleted above!)
    if(!place_meeting(x,y-32,obj_block))
    {
        image_index = 3;
    }
}

//Make undercorner into corner
if(image_index == 5)
{
    //For undercorners that have no top (previous deleted above!)
    if(!place_meeting(x,y-32,obj_block))
    {
        image_index = 2;
    }
}

//Corner
if(image_index == 0)
{
    //Under corners (left)
    if(!place_meeting(x+32,y,obj_block))
    {
        image_index = 2;
    }
    
    //Under corners (left)
    if(!place_meeting(x-32,y,obj_block))
    {
        image_index = 3;
    }
}

//Walling
if(image_index == 10)
{
    //Under corners (left)
    if(!place_meeting(x+32,y,obj_block))
    {
        image_index = 9;
    }
    
    //Under corners (left)
    if(!place_meeting(x-32,y,obj_block))
    {
        image_index = 8;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Corner blocks &amp; image_indexing

//Top Layer
if(image_index == 0)
{
   var block = instance_create(x,y+32,obj_block);
   block.image_index = 1;
}

//Make under_corner block.
if(image_index == 1)
{
    var block = instance_place(x,y-32,obj_block);
    var block2 = instance_place(x-32,y,obj_block);
    var block3 = instance_place(x+32,y,obj_block);
    var block4 = instance_place(x,y+32,obj_block);
    
    //If up block is up and left.
    if (block != noone &amp;&amp; block.image_index == 0)
    {
        if (block2 != noone &amp;&amp; block2.image_index == 0)
        {
            image_index = 9;
        }
    }
    
    //If up block is up and right.
    if (block != noone &amp;&amp; block.image_index == 0)
    {
        if (block3 != noone &amp;&amp; block3.image_index == 0)
        {
            image_index = 10;
        }
    }

    //RIGHT SIDE
    //If right block is down and right.
    if (block3 != noone &amp;&amp; block3.image_index == 7)
    {
        if (block4 != noone &amp;&amp; block4.image_index == 7)
        {
            image_index = 12;
        }
    }
    
    //If right block is down and right.
    if (block != noone &amp;&amp; block.image_index == 7)
    {
        if (block3 != noone &amp;&amp; block3.image_index == 7)
        {
            image_index = 10;
        }
    }
    
    //LEFT SIDE
    //If left block is left and down.
    if (block2 != noone &amp;&amp; block2.image_index == 6)
    {
        if (block4 != noone &amp;&amp; block4.image_index == 6)
        {
            image_index = 11;
        }
    }
    
    //If left block is left and up.
    if (block != noone &amp;&amp; block.image_index == 6)
    {
        if (block2 != noone &amp;&amp; block2.image_index == 6)
        {
            image_index = 9;
        }
    }
}

//Right Side, create dirt.
if(image_index == 7)
{
   var block = instance_create(x-32,y,obj_block);
   block.image_index = 1;
}

//Left Side create dirt.
if(image_index == 6)
{
   var block = instance_create(x+32,y,obj_block);
   block.image_index = 1;
}








if(image_index == 5)
{
    //Fill gap if needed
    /*
    for(i=0; i&lt;5; i++)
    {
        if(!place_meeting(x,y-32 -(i*16) ,obj_block))
        {
            var block = instance_create(x,y-32 -(i*16) ,obj_block);
            block.image_index = 7;
        }
    }
    */
}

if(image_index == 7)
{
    
}

/*
//Grass
if(image_index == 0)
{
    //Corners (right)
    var block = instance_place(x,y+32,obj_block);
    if (block != noone)
    {
        if (block.image_index == 4)
        {
            image_index = 2;
        }
    }
    
    //Corners (left)
    var block = instance_place(x,y+32,obj_block);
    if (block != noone)
    {
        if (block.image_index == 5)
        {
            image_index = 3;
        }
    }
}

alarm[2] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deleting blocks

//Right configuration.
if(image_index == 7)
{
    //Destroy self if below the down side y. (If block is overlapping).
    if(y &gt; global.downsidey)
    {
        instance_destroy();
    }
}

//Down configuration
if(image_index == 8)
{
    //If over limit, delete to avoid overlap.
    if(x &gt; global.right_currentx)
    {
        instance_destroy();
    }
    
    //Create bottom right corner!
    else if (x == global.right_currentx)
    {
        image_index = 5;
    }
}

alarm[1] = 3;








/*
if(image_index == 1)
{
    var block = instance_place(x,y,obj_block);
    if (block != noone)
    {
        
        image_index = 0;
    }
}







/*
if(image_index == 0)
{
    //Make dirt
    var block = instance_place(x,y-16,obj_block);
    if (block != noone)
    {
        image_index = 1;
    }
    
    
    //For right corners
    if(place_meeting(x,y+16,obj_block))
    {
        if(place_meeting(x-16,y,obj_block))
        {
            if(!place_meeting(x+16,y,obj_block))
            {
                image_index = 3;
            }
        }
    }
    
    //For left corners
    if(place_meeting(x,y+16,obj_block))
    {
        if(place_meeting(x+16,y,obj_block))
        {
            if(!place_meeting(x-16,y,obj_block))
            {
                image_index = 2;
            }
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make under_corner block.

//Up
if(image_index == 0)
{
    var block = instance_place(x,y+32,obj_block);
    
    //If under corner is below
    if (block != noone &amp;&amp; block.image_index == 9)
    {
        image_index = 2;
    }
    else if (block != noone &amp;&amp; block.image_index == 10)
    {
        image_index = 3;
    }
}

//Right
if(image_index == 7)
{
    var block = instance_place(x-32,y,obj_block);
    
    //If under corner is below
    if (block != noone &amp;&amp; block.image_index == 12)
    {
        image_index = 5;
    }
    else if (block != noone &amp;&amp; block.image_index == 10)
    {
        image_index = 3;
    }
}

//Left
if(image_index == 6)
{
    var block = instance_place(x+32,y,obj_block);
    
    //If under corner is below
    if (block != noone &amp;&amp; block.image_index == 9)
    {
        image_index = 2;
    }
    else if (block != noone &amp;&amp; block.image_index == 11)
    {
        image_index = 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fill dirt blocks
if(image_index == 1 &amp;&amp; filldirt == true)
{
    if(place_meeting(x+16, y, obj_block))
    {
        filldirt = false;
    }
    else
    {
        var block = instance_create(x+32,y,obj_block);
        block.image_index = 1;
        filldirt = false;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
